<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id="^boWJvjIweAGK?9x25!m" x="20" y="20"><statement name="HANDLER"><block type="typescript_statement" id="l,yQ7_:v?;kKiab,~Kz[" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="class BotnRoll {" line1="" line2="    name : string;" line3="    constructor(name: string) {" line4="        this.name = name;" line5="    }" line6="" line7="    // key used in critical commands" line8="    _KEY1 = 0xAA;" line9="    // key used in critical commands" line10="    _KEY2 = 0x55;" line11="" line12="    // LED" line13="    _COMMAND_LED = 0xFD;" line14="" line15="    // 20 MinStable:15 Crash:14" line16="    _delay_TR = 20;" line17="    // 20 Crash: No crash even with 0 (ZERO)" line18="    _delay_SS = 20;" line19="" line20="    __us_sleep(microseconds: number): void {" line21="        basic.pause(microseconds / 1000);" line22="    }" line23="" line24="    __ms_sleep(millisseconds: number): void {" line25="        basic.pause(millisseconds);" line26="    }" line27="" line28="    __high_byte(word: number): number {" line29="        return (word &gt;&gt; 8) &amp; 0xFF;" line30="    }" line31="" line32="    __low_byte(word: number): number {" line33="        return word &amp; 0xFF;" line34="    }" line35="" line36="    __open_spi(): void {" line37="        pins.spiFrequency(488000);" line38="        pins.spiFormat(8, 1);" line39="        pins.spiPins(DigitalPin.P15, DigitalPin.P14, DigitalPin.P13);" line40="        pins.digitalWritePin(DigitalPin.P16, 0);" line41="    }" line42="" line43="    __close_spi(): void {" line44="        pins.digitalWritePin(DigitalPin.P16, 1);" line45="    }" line46="" line47="    openConnection(): void {" line48="        this.__open_spi();" line49="    }" line50="" line51="    __request_byte(command: number): number {" line52="        // this.__open_spi();" line53="        pins.spiWrite(command);" line54="        pins.spiWrite(this._KEY1);" line55="        pins.spiWrite(this._KEY2);" line56="        this.__us_sleep(this._delay_TR);" line57="        const result = pins.spiWrite(0); // Dummy write to trigger read" line58="        // this.__close_spi();" line59="        return result;" line60="    }" line61="" line62="    __request_word(command: number): number {" line63="        // this.__open_spi();" line64="        pins.spiWrite(command);" line65="        pins.spiWrite(this._KEY1);" line66="        pins.spiWrite(this._KEY2);" line67="        const result2 = pins.spiWrite(0); // Dummy write to trigger read" line68="        // this.__close_spi();" line69="        return result2;" line70="    }" line71="" line72="    __send_data(command: number, msg: number[] = []): void {" line73="        // this.__open_spi();" line74="        pins.spiWrite(command);" line75="        pins.spiWrite(this._KEY1);" line76="        pins.spiWrite(this._KEY2);" line77="        if (msg.length &gt; 0) {" line78="            for (let i = 0; i &lt; msg.length; i++) {" line79="                pins.spiWrite(msg[i]);" line80="            }" line81="        }" line82="        // this.__close_spi();" line83="        this.__ms_sleep(2);" line84="    }" line85="" line86="    led(state: number): void {" line87="        state = state % 2;" line88="        const msg = [this.__low_byte(state)];" line89="        this.__send_data(this._COMMAND_LED, msg);" line90="    }" line91="" line92="    heart(): void {" line93="        basic.showIcon(IconNames.SmallHeart);" line94="    }" line95="" line96="    clearScreen(): void {" line97="        basic.clearScreen();" line98="    }" line99="}" numlines="100"></mutation><next><block type="typescript_statement" id="zYc*([vYebZQ~W-+P$s:" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="const oneA = new BotnRoll('OneA');" numlines="1" declaredvars="oneA"></mutation><next><block type="typescript_statement" id="i70j.Z`*^]bphM6+Hd0/" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="oneA.openConnection();" numlines="1"></mutation><next><block type="basic_show_icon" id="2EL`5nI8cj3r%8$/C~o)"><field name="i">IconNames.SmallHeart</field></block></next></block></next></block></next></block></statement></block><block type="device_forever" id="a-Zh|ktWG[_Tr19lg3cn" x="865" y="64"><comment pinned="false" h="80" w="160">Your on_forever logic goes here</comment><statement name="HANDLER"><block type="typescript_statement" id="?i|YDGuIYehKIg:B1FS/" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="oneA.led(1);" numlines="1"></mutation><next><block type="typescript_statement" id="so9*zs6QP.c{IYTwFxfJ" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="oneA.heart();" numlines="1"></mutation><next><block type="device_pause" id="o5/bQbi[-=#9}lQLCKC9"><comment pinned="false" h="80" w="160">basic.showIcon(IconNames.SmallHeart);</comment><value name="pause"><shadow type="timePicker" id="[b}/tM{Y,+c#k]tw7ir+"><field name="ms">1000</field></shadow></value><next><block type="typescript_statement" id="0@WKxrD*_QnYC~rQyxM+" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="oneA.clearScreen();" numlines="1"></mutation><next><block type="typescript_statement" id="w^6W5~^|)0xPLL6?!Qi9" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="oneA.led(0);" numlines="1"></mutation><next><block type="device_pause" id="8NToLyz5[*NPjyG^2Wt:"><comment pinned="false" h="80" w="160">basic.clearScreen();</comment><value name="pause"><shadow type="timePicker" id="t.1W@Xq$:@e[#lulGOzT"><field name="ms">1000</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></statement></block></xml>